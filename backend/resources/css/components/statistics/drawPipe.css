/* 自然言語処理パイプ図 */
.statisticOverallViewWrapper {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}
.statisticOverallViewWrapper > div {
    margin-top: 12px;
}
.statisticOverallViewHierarchy-asc {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: center;
}
.statisticOverallViewHierarchy-desc {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-around;
    flex-direction: row-reverse;
}
.statisticOverallViewHierarchy-only-bottom {
    width: 100%;
    height: 65px;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    flex-direction: row-reverse;
}
.statisticOverallViewHierarchy-desc {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-around;
    flex-direction: row-reverse;
}
.statisticOverallViewHierarchy-desc .sov-arrow {
    /* 全部右矢印使用、反対にする */
    transform: rotate(180deg);
}
.statisticOverallViewHierarchy-desc .sov-pipe p {
    /* 全部右矢印使用、反対にする */
    clip-path: polygon(100% 0%, 89% 51%, 100% 100%, 25% 100%, 0% 50%, 25% 0%);
}
.sov-arrow-always-bottom {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    color: var(--status-good);
    transform: rotate(90deg);
}
.sov-arrow {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    color: var(--status-good);
}
.sov-arrow-raw {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    color: var(--status-good);
}

.sov-pipe {
    padding: 4px 12px;
    margin: 4px;
    border-radius: 12px;
    border: 2px solid var(--status-good);
    display: flex;
    align-items: center;
}

.sov-pipe-wrapper section {
    text-align: center;
    font-size: 0.75em;
    color: var(--text-main-color);
}
.sov-pipe-wrapper nav {
    position: absolute;
    z-index: 2;
    text-align: center;
    font-size: 0.75em;
    width: 300px;
    height: 250px;
    color: var(--text-main-color);
    background-color: var(--border-main-color);
    clip-path: polygon(
        67% 12%,
        100% 14%,
        100% 66%,
        0 66%,
        0 14%,
        49% 12%,
        55% 3%
    );
    display: flex;
    align-items: center;
    justify-content: center;
}
.sov-pipe p {
    width: 130px;
    height: 80px;
    clip-path: polygon(75% 0%, 93% 50%, 75% 100%, 0% 100%, 14% 50%, 0% 0%);
    background-color: var(--border-main-color);
    margin: 4px 0px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    /* padding-right: 1em; */
}
/* パイプの動きアニメーション */

#kadodePipe p:nth-of-type(1) {
    animation: slideIn 1s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#kadodePipe p:nth-of-type(2) {
    animation: slideIn 1.5s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#kadodePipe p:nth-of-type(3) {
    animation: slideIn 2s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}

#ginzaPipe p:nth-of-type(1) {
    animation: slideInReverse 1s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#ginzaPipe p:nth-of-type(2) {
    animation: slideInReverse 1.5s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#ginzaPipe p:nth-of-type(3) {
    animation: slideInReverse 2s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#ginzaPipe p:nth-of-type(4) {
    animation: slideInReverse 2.5s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#ginzaPipe p:nth-of-type(5) {
    animation: slideInReverse 3s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#ginzaPipe p:nth-of-type(6) {
    animation: slideInReverse 4.5s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
#ginzaPipe p:nth-of-type(7) {
    animation: slideInReverse 5s cubic-bezier(0.25, 1, 0.5, 1) 1 forwards;
}
@keyframes slideIn {
    0% {
        transform: translateX(180px);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
    }
    40%,
    100% {
        opacity: 1;
    }
}
@keyframes slideInReverse {
    0% {
        transform: translateX(-180px);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
    }
    40%,
    100% {
        opacity: 1;
    }
}
.sov-square {
    border-radius: 4px;
    padding: 4px 1em;
    margin: 4px;
    height: 2em;
    border: 1px solid var(--border-main-color);
}
.sov-square p {
    text-align: center;
}

@media screen and (max-width: 640px) {
    /* スマホの時 */
    .sov-arrow {
        /* 矢印を下向きにする */
        transform: rotate(90deg) !important;
        width: 100%;
    }
    .sov-pipe {
        flex-direction: column;
        align-items: center;
    }

    .sov-pipe p {
        float: initial;
        width: 100px;
        height: 100px;
        clip-path: polygon(100% 0, 100% 79%, 53% 100%, 0 79%, 0 0, 52% 14%);
    }
    .statisticOverallViewHierarchy-desc .sov-pipe p {
        float: initial;
        width: 100px;
        height: 100px;
        clip-path: polygon(100% 0, 100% 79%, 53% 100%, 0 79%, 0 0, 52% 14%);
    }
    .statisticOverallViewHierarchy-only-bottom {
        /* 追加style無効化 */
        justify-content: center !important;
        margin: 0 !important;
    }
    .hidden {
        display: none !important;
    }
}

.nlp-normal-table {
    color: var(--text-main-color);
    border: 2px solid var(--button-main-color);
    text-align: center;
}
.nlp-normal-table th,
td {
    padding: 0.5em;
    border: 1px solid var(--button-main-color);
}

.nlp-normal-table th {
    color: var(--bg-main-color);
    background-color: var(--button-main-color);
}

.nlp-normal-package {
    width: 250px;
    height: 300px;
    color: var(--text-main-color);
    border: 1px solid var(--button-main-color);
    border-radius: 3px;
    margin: 4px 12px;
    padding: 1em 1em;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-direction: column;
}

.user-package-select-button {
    position: relative;
    top: 40px;
    right: -5px;
    width: 50px;
    height: 50px;
    border-radius: 50% !important;
}

#kadodeCatchphrase span {
    /* transformを効かせるため */
    display: inline-block;
}
#kadodeCatchphrase span:nth-of-type(1) {
    transform: translateX(-20px) rotate(-9deg);
}
#kadodeCatchphrase span:nth-of-type(2) {
    transform: translateY(15px) rotate(-20deg);
}
#kadodeCatchphrase span:nth-of-type(3) {
    transform: translateX(20px) translateY(15px) rotate(20deg);
}
